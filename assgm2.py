# -*- coding: utf-8 -*-
"""assgm2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZJfDTrBV8uptlTFYzUPY7VrnIhYXnBZS
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import pickle

# To ignore warnings from the console
import warnings
warnings.filterwarnings("ignore")

# Load the dataset
df = pd.read_csv('road_accidents.csv')

# Display the first few rows of the dataset
print(df.head())

# Convert categorical variables to dummy variables (one-hot encoding)
df = pd.get_dummies(df, columns=['weather_conditions', 'road_surface', 'vehicle_type'], drop_first=True)

# Define the independent variables (features) and the dependent variable (target)
X = df.drop(columns='accident_severity')  # Features (independent variables)
y = df['accident_severity']  # Target (dependent variable)

# Split the data into training and testing sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Check the shapes to make sure splitting worked correctly
print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)

# Create a linear regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train, y_train)

# Get the model coefficients and intercept
print("Model Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)

# Make predictions on the testing data
y_pred = model.predict(X_test)

# Evaluate the model using Mean Squared Error (MSE)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Display the first few predictions
print("Predictions:", y_pred[:5])
print("Actual Values:", y_test[:5].values)

# Saving the trained model to a file for future use
with open('accident_severity_model.pkl', 'wb') as file:
    pickle.dump(model, file)

print("Model saved to accident_severity_model.pkl")

# Hypothetical input data as a data frame
hypothetical_data = pd.DataFrame({
    'time_of_day': [15],
    'speed_limit': [80],
    'driver_age': [35],
    'seatbelt_use': [1],
    'traffic_volume': [600],
    'weather_conditions_2': [1],  # Rainy
    'weather_conditions_3': [0],
    'weather_conditions_4': [0],
    'road_surface_2': [1],  # Wet
    'road_surface_3': [0],
    'road_surface_4': [0],
    'vehicle_type_2': [0],
    'vehicle_type_3': [1],  # Sedan
    'vehicle_type_4': [0],
})

# Loading the saved model
with open('accident_severity_model.pkl', 'rb') as file:
    loaded_model = pickle.load(file)

# Make a prediction using the loaded model
severity_prediction = loaded_model.predict(hypothetical_data)
print("Predicted Accident Severity:", severity_prediction[0])